steps:
  # Compilar la aplicación con Maven
  - name: 'openjdk:17'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd /workspace
        chmod +x ./mvnw
        ./mvnw clean package -DskipTests
        
  # Construir la imagen Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'southamerica-east1-docker.pkg.dev/regal-creek-454315-j6/prestige-club-repo/gestor-clientes:latest'
      - '-t'
      - 'southamerica-east1-docker.pkg.dev/regal-creek-454315-j6/prestige-club-repo/gestor-clientes:$SHORT_SHA'
      - '.'
      
  # Subir la imagen al Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'southamerica-east1-docker.pkg.dev/regal-creek-454315-j6/prestige-club-repo/gestor-clientes:latest'
      
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'southamerica-east1-docker.pkg.dev/regal-creek-454315-j6/prestige-club-repo/gestor-clientes:$SHORT_SHA'

# Configuración de imágenes
images:
  - 'southamerica-east1-docker.pkg.dev/regal-creek-454315-j6/prestige-club-repo/gestor-clientes:latest'
  - 'southamerica-east1-docker.pkg.dev/regal-creek-454315-j6/prestige-club-repo/gestor-clientes:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
